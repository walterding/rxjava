import java.util.ArrayList;
import java.util.Random;

/**
 * Created by hinotohui on 18/3/15.
 */
public class SkipList<K extends Comparable,V>{
    private int level;

    private Node<K, V> sentry;
    private Node<K,V> head;

    private int level(){
        if (this.level<=3)
            return this.level+1;

        return new Random().nextInt(2*this.level);
    }

    public SkipList(){
        //哨兵
        this.sentry=Node.<K,V>getSentryNode();
        this.head=new Node<K, V>(this.sentry);

        this.level=1;
    }

    public V search(K key){
        Node<K,V> node=this.head;
        Node<K,V> pre=node;

        for (int level=this.level-1;level>=0;level--){
            node=pre;

            while (true){
                pre=node;
                node=node.getNext(level);

                int result=node.comPareKey(key);

                if(result==0)
                    return node.getValue();
                else if(result>0){
                    break;
                }
            }
        }

        return null;
    }

    public void insert(K key,V value) throws KeyExistException{
        Node<K,V> kvNode=new Node<K,V>(key,value);

        ArrayList<Node<K,V>> histories=new ArrayList<Node<K, V>>();

        for (int i=0;i<this.level;i++){
            Node<K,V> node=this.head;

            while(node!=sentry){
                Node<K,V> pre=node;
                node=node.getNext(i);

                int result=node.comPareKey(kvNode);

                if(result==0){
                    throw new KeyExistException();
                }else if(result>0){
                    histories.add(pre);
                    break;
                }
            }
        }

        int level=level();

        if (level>this.level){
            this.level++;
            level=this.level;

            //初始化到哨兵
            this.head.addNext(sentry);
            histories.add(this.head);
        }

        for(int i=0;i<level;i++){
            Node<K,V> history=histories.get(i);

            kvNode.addNext(history.getNext(i));
            history.setNext(i,kvNode);

        }
    }

    public static void main(String[] args) throws KeyExistException {
        SkipList<Integer,String> list=new SkipList<Integer, String>();
        list.insert(1,"2");
        list.insert(2,"3");

        System.out.println(list.search(2));
    }
}
